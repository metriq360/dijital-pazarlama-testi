// /netlify/functions/send-email.js

// SendGrid Mail kÃ¼tÃ¼phanesini import ediyoruz.
// Bu paketi projenize eklemeniz gerekir: npm install @sendgrid/mail
const sgMail = require('@sendgrid/mail');

// SendGrid API anahtarÄ±nÄ±zÄ± Netlify ortam deÄŸiÅŸkenlerinden alÄ±yoruz.
sgMail.setApiKey(process.env.SENDGRID_API_KEY);

// Netlify fonksiyonunun ana iÅŸleyici (handler) fonksiyonu
exports.handler = async (event, context) => {
  // Sadece POST isteklerine izin ver
  if (event.httpMethod !== 'POST') {
    return { statusCode: 405, body: 'Method Not Allowed' };
  }

  try {
    // Ä°stek gÃ¶vdesindeki verileri ayrÄ±ÅŸtÄ±rÄ±yoruz
    const { 
      userEmail, 
      userName, 
      adminEmail, 
      reportContent, 
      userInfoForAdmin 
    } = JSON.parse(event.body);

    // HTML'e dÃ¶nÃ¼ÅŸtÃ¼rÃ¼lmÃ¼ÅŸ rapor iÃ§eriÄŸi (satÄ±r sonlarÄ±nÄ± <br> ile deÄŸiÅŸtirerek)
    const reportHtml = reportContent.replace(/\n/g, '<br>');

    // 1. E-posta: KullanÄ±cÄ±ya gÃ¶nderilecek olan
    const msgToUser = {
      to: userEmail,
      from: 'bilgi@metriq360.com', // GÃ¶nderen olarak doÄŸrulanmÄ±ÅŸ SendGrid e-postanÄ±z
      subject: `ğŸš€ Dijital Pazarlama SaÄŸlÄ±k Testi Raporunuz, ${userName}!`,
      html: `
        <div style="font-family: sans-serif; line-height: 1.6;">
          <h2>Merhaba ${userName},</h2>
          <p>Dijital Pazarlama SaÄŸlÄ±k Testi'ni tamamladÄ±ÄŸÄ±nÄ±z iÃ§in teÅŸekkÃ¼rler!</p>
          <p>AÅŸaÄŸÄ±da sizin iÃ§in Ã¶zel olarak hazÄ±rlanan raporu bulabilirsiniz:</p>
          <hr>
          ${reportHtml}
          <hr>
          <p>Dijital pazarlamada bir sonraki adÄ±mÄ± atmak iÃ§in bizimle iletiÅŸime geÃ§mekten Ã§ekinmeyin.</p>
          <p>SaygÄ±larÄ±mÄ±zla,<br>Metriq360 Ekibi</p>
        </div>
      `,
    };

    // 2. E-posta: Site sahibine (admin) gÃ¶nderilecek olan
    const msgToAdmin = {
      to: adminEmail,
      from: 'bilgi@metriq360.com', // GÃ¶nderen olarak doÄŸrulanmÄ±ÅŸ SendGrid e-postanÄ±z
      subject: `Yeni Test TamamlandÄ±: ${userName}`,
      html: `
        <div style="font-family: sans-serif; line-height: 1.6;">
          <h2>Yeni bir test sonucu aldÄ±nÄ±z!</h2>
          <p><strong>KullanÄ±cÄ±:</strong> ${userName}</p>
          <p><strong>E-posta:</strong> ${userEmail}</p>
          <p><strong>SektÃ¶r:</strong> ${userInfoForAdmin.sector}</p>
          <p><strong>Puan:</strong> ${userInfoForAdmin.overallScore} / ${userInfoForAdmin.overallMaxScore}</p>
          <hr>
          <h3>OluÅŸturulan Rapor:</h3>
          ${reportHtml}
        </div>
      `,
    };

    // Her iki e-postayÄ± da gÃ¶nder
    await sgMail.send(msgToUser);
    await sgMail.send(msgToAdmin);

    // BaÅŸarÄ±lÄ± olursa 200 durum kodu ile geri dÃ¶nÃ¼ÅŸ yap
    return {
      statusCode: 200,
      body: JSON.stringify({ message: 'E-postalar baÅŸarÄ±yla gÃ¶nderildi.' }),
    };

  } catch (error) {
    // Hata durumunda konsola yaz ve 500 durum kodu ile geri dÃ¶nÃ¼ÅŸ yap
    console.error('E-posta gÃ¶nderme hatasÄ±:', error);
    if (error.response) {
      console.error(error.response.body)
    }
    return {
      statusCode: error.statusCode || 500,
      body: JSON.stringify({ error: 'E-posta gÃ¶nderilemedi.' }),
    };
  }
};
